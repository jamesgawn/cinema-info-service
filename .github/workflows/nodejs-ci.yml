name: CICD
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  unit-test:
    name: Unit Test Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Cache Node Modules
        uses: actions/cache@v1
        with:
          path: ./node_modules # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-npm-${{ hashFiles('./package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-npm-
      - name: NPM Install
        run: npm install
      - name: Run Unit Tests
        run: npm test
        env:
          CI: true
  lint:
    name: Lint Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Cache Node Modules
        uses: actions/cache@v1
        with:
          path: ./node_modules # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-npm-${{ hashFiles('./package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-npm-
      - name: NPM Install
        run: npm install
      - name: Run Lint Test
        run: npm run lint
        env:
          CI: true
  coverage:
    name: Coverage Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Cache Node Modules
        uses: actions/cache@v1
        with:
          path: ./node_modules # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-npm-${{ hashFiles('./package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-npm-
      - name: NPM Install
        run: npm install
      - name: Run Coverage Test
        run: npm run coverage
        env:
          CI: true
  build:
    name: Build Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Cache Node Modules
        uses: actions/cache@v1
        with:
          path: ./node_modules # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-npm-${{ hashFiles('./package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-npm-
      - name: NPM Install
        run: npm install
      - name: Run Build
        run: npm run build
        env:
          CI: true
  publish:
    name: Publish
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    needs: [unit-test, coverage, lint, build]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '12.x'
          registry-url: 'https://npm.pkg.github.com'
      - name: 'Automated Version Bump'
        uses: 'phips28/gh-action-bump-version@master'
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          tag-prefix: 'v'
      - name: NPM Install
        run: npm install
      - name: Build
        run: npm run build
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}